version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flag-explorer-backend
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - flag-explorer-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flag-explorer-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8001
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - flag-explorer-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: flag-explorer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - flag-explorer-network

networks:
  flag-explorer-network:
    driver: bridge

# For development, you can use:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up 